---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: external-ingress-nginx
spec:
  interval: 1h
  chart:
    spec:
      chart: ingress-nginx
      version: 4.12.2
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    fullnameOverride: external-ingress-nginx
    controller:
      service:
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "external.${SECRET_DOMAIN}"
          lbipam.cilium.io/ips: "192.168.5.240"
        externalTrafficPolicy: Cluster
      ingressClassResource:
        name: external
        default: false
        controllerValue: k8s.io/external
      admissionWebhooks:
        objectSelector:
          matchExpressions:
            - key: ingress-class
              operator: In
              values: ["external"]
      config:
        allow-snippet-annotations: true
        annotations-risk-level: Critical
        client-body-buffer-size: 100M
        client-body-timeout: 120
        client-header-timeout: 120
        enable-brotli: "true"
        enable-ocsp: "true"
        enable-real-ip: "true"
        force-ssl-redirect: "true"
        # See instructions at https://goauthentik.io/docs/providers/proxy/forward_auth
        global-auth-url: "http://authentik-outpost.default.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx"
        global-auth-signin: "https://auth.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$host$request_uri"
        global-auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid
        global-auth-snippet: "proxy_set_header X-Forwarded-Host $http_host;"
        location-snippet: |
          auth_request_set $authentik_username $upstream_http_X_authentik_username;
          auth_request_set $authentik_groups $upstream_http_X_authentik_groups;
        server-snippet: |
          access_by_lua_block {
            local username = ngx.var.authentik_username
            local groups = ngx.var.authentik_groups
            local required_usernames = ngx.var['required_usernames']
            local required_groups = ngx.var['required_groups']
              local sep = '|'
            if (required_usernames ~= nil) then
              for required_username in string.gmatch(required_usernames, "([^"..sep.."]+)") do
                if string.match(username, required_username) then
                  return;
                end
              end
            end
            if (required_groups ~= nil) then
              for group in string.gmatch(groups, "([^"..sep.."]+)") do
                for required_group in string.gmatch(required_groups, "([^"..sep.."]+)") do
                  if string.match(group, required_group) then
                    return;
                  end
                end
              end
            end
            if (required_usernames ~= nil) or (required_groups ~= nil)  then
              ngx.exit(ngx.HTTP_FORBIDDEN);
            end
          }
        hide-headers: Server,X-Powered-By
        hsts-max-age: "31449600" # quote
        keep-alive-requests: 10000
        keep-alive: 120
        log-format-escape-json: "true"
        log-format-upstream: >
          {"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr",
          "x_forwarded_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id",
          "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time,
          "status": $status, "vhost": "$host", "request_proto": "$server_protocol",
          "path": "$uri", "request_query": "$args", "request_length": $request_length,
          "duration": $request_time,"method": "$request_method", "http_referrer": "$http_referer",
          "http_user_agent": "$http_user_agent"}
        proxy-body-size: 0
        proxy-buffer-size: 16k
        ssl-protocols: TLSv1.3 TLSv1.2
        use-forwarded-headers: "true"
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespaceSelector:
            any: true
      extraArgs:
        default-ssl-certificate: cert-manager/${SECRET_DOMAIN/./-}-production-tls
      resources:
        requests:
          cpu: 100m
        limits:
          memory: 500Mi
