---
# yaml-language-server: $schema=https://github.com/yannh/kubernetes-json-schema/raw/refs/heads/master/master/service.json
# Service and Endpoints remain the same
apiVersion: v1
kind: Service
metadata:
  name: &name hassio
  labels:
    app: *name
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8123
      protocol: TCP
---
# yaml-language-server: $schema=https://github.com/yannh/kubernetes-json-schema/raw/refs/heads/master/master/endpoints.json
apiVersion: v1
kind: Endpoints
metadata:
  name: hassio
subsets:
  - addresses:
      - ip: ${HASSIO_IP}
    ports:
      - port: 8123
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/main/config/crd/standard/gateway.networking.k8s.io_httproutes.yaml
# HTTPRoute equivalent of the hassio Ingress
# This file demonstrates the Gateway API migration path for external services
# To activate: rename to hassio.yaml and move old hassio.yaml to hassio-ingress.yaml.bak
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: &name hassio
  annotations:
    # external-dns annotations for Gateway API
    # Note: external-dns must be configured to watch HTTPRoute resources
    external-dns.alpha.kubernetes.io/hostname: "ha.${SECRET_DOMAIN}"
    external-dns.alpha.kubernetes.io/target: "external-gw.${SECRET_DOMAIN}"
    # Gatus monitoring
    gatus.home-operations.com/endpoint: |-
      client:
        dns-resolver: tcp://1.1.1.1:53
      group: external
      ui:
        hide-hostname: true
        hide-url: true
spec:
  # Reference the external Gateway
  parentRefs:
    - name: external
      namespace: network
      sectionName: https
  # Hostname matching
  hostnames:
    - "ha.${SECRET_DOMAIN}"
  # Routing rules
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: *name
          port: 80
