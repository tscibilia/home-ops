---
# yaml-language-server: $schema=https://github.com/instrumenta/kubernetes-json-schema/raw/refs/heads/master/v1.18.1/serviceaccount-v1.json
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ceph-mgr-sync
---
# yaml-language-server: $schema=https://github.com/instrumenta/kubernetes-json-schema/raw/refs/heads/master/v1.18.1/role-rbac-v1.json
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ceph-mgr-sync
rules:
  - apiGroups: ["helm.toolkit.fluxcd.io"]
    resources: ["helmreleases"]
    verbs: ["get","patch"]
---
# yaml-language-server: $schema=https://github.com/instrumenta/kubernetes-json-schema/raw/refs/heads/master/v1.18.1/rolebinding-rbac-v1.json
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ceph-mgr-sync
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ceph-mgr-sync
subjects:
  - kind: ServiceAccount
    name: ceph-mgr-sync
---
# yaml-language-server: $schema=https://github.com/instrumenta/kubernetes-json-schema/raw/refs/heads/master/v1.18.1/cronjob.json
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ceph-mgr-endpoint-sync
spec:
  schedule: "*/5 * * * *"   # every 5 minutes
  concurrencyPolicy: Replace
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: ceph-mgr-sync
          containers:
            - name: sync-mgr-endpoint
              image: bitnami/kubectl:1.33.0-debian-12-r1
              securityContext:
                runAsUser: 0
              command: ["/bin/sh","-c"]
              args:
                - |
                  set -eu

                  # 1) Install only curl (small footprint)
                  mkdir -p /var/lib/apt/lists/partial
                  apt-get update && apt-get install -y --no-install-recommends curl \
                    && rm -rf /var/lib/apt/lists/*

                  # 2) Find the active mgr by probing /metrics on port 9283
                  ACTIVE_IP=""
                  for IP in 10.10.10.1 10.10.10.2 10.10.10.3; do
                    if curl -sf "http://${IP}:9283/metrics" \
                         | grep -q 'ceph_mgr_metadata.*state="active"'; then
                      ACTIVE_IP="$IP"
                      break
                    fi
                  done

                  if [ -z "$ACTIVE_IP" ]; then
                    echo "ERROR: no active MGR found" >&2
                    exit 1
                  fi

                  # 3) Patch only that one IP into the HelmRelease
                  kubectl -n rook-ceph patch helmrelease rook-ceph-cluster --type=merge \
                    --patch "{\"spec\":{\"values\":{\"monitoring\":{\"externalMgrEndpoints\":[{\"ip\":\"${ACTIVE_IP}\"}]}}}}"
          restartPolicy: OnFailure