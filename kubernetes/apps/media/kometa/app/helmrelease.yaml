---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kometa
spec:
  chartRef:
    kind: OCIRepository
    name: *app
  maxHistory: 2
  interval: 1h
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        type: cronjob
        cronjob:
          schedule: "30 2 * * *"
          timeZone: &TZ ${TIMEZONE}
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
        initContainers:
          01-init-overlays:
            image:
              repository: quay.io/minio/mc
              tag: RELEASE.2025-05-21T01-59-54Z@sha256:09f93f534cde415d192bb6084dd0e0ddd1715fb602f8a922ad121fd2bf0f8b44
            command: ["/bin/sh", "-c"]
            env:
              HOME: /tmp
            args:
              - |
                  mkdir -p /config/overlays;
                  mkdir -p /config/assets;
                  mc alias set s3 https://s3.t0m.co '' '' --api S3v4;
                  mc mirror --overwrite --remove s3/t0m-public/kometa/overlays/ /config/overlays/;
                  mc mirror --overwrite --remove s3/t0m-public/kometa/assets/ /config/assets/
        containers:
          app:
            image:
              repository: docker.io/kometateam/kometa
              tag: v2.2.1@sha256:83b071e96526fc8d29a4101304a1bc0e5363cedbeec8d6b79293c9316f967d4d
            command:
              - /bin/sh
              - -c
            args:
              - |
                python3 kometa.py --run --read-only-config --run-libraries "Anime";
                python3 kometa.py --run --read-only-config --run-libraries "Movies";
                python3 kometa.py --run --read-only-config --run-libraries "TV Shows";
            env:
              TZ: *TZ
              KOMETA_READ_ONLY_CONFIG: true
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
              limits:
                cpu: 2000m
                memory: 6Gi # Usage peaks at 4.2Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1044
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["plex"]
              topologyKey: kubernetes.io/hostname
    persistence:
      config:
        existingClaim: *app
      config-file:
        type: configMap
        name: "{{ .Release.Name }}-configmap"
        globalMounts:
          - path: /config/config.yml
            subPath: config.yml
            readOnly: true
      tmpfs:
        type: emptyDir
        advancedMounts:
          *app :
            app:
              - path: /config/logs
                subPath: logs
