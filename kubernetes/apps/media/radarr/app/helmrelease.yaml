---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: sonarr
      namespace: media
  values:
    controllers:
      radarr:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          remove-old-db:
            image:
              repository: ghcr.io/ghcr-library/busybox
              tag: latest@sha256:c9249fdf56138f0d929e2080ae98ee9cb2946f71498fc1484288e6a935b5e5bc
            command:
              - sh
              - -c
              - |
                cp /tmp/autoProcess.ini /usr/local/sma/config/autoProcess.ini
                chown -R abc:abc /usr/local/sma/config
                chmod -R 775 /usr/local/sma/config/*.sh
        containers:
          app:
            image:
              repository: ghcr.io/mdhiggins/radarr-sma
              tag: "develop@sha256:155eb31baf0dcb7b91f3602fe737b3751923dc8b7b578f96cb0e00aa91399372"
            env:
              TZ: ${TIMEZONE}
              PUID: 1044
              PGID: 100
            resources:
              requests:
                cpu: 50m
                memory: 512Mi
              limits:
                memory: 2Gi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: &port 7878
                  initialDelaySeconds: 600
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
    defaultPodOptions:
      securityContext:
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /config
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      config-empty:
        type: emptyDir
        globalMounts:
          - path: /usr/local/sma/config
      config-temp:
        type: secret
        name: sma-configmap-secret
        globalMounts:
          - path: /tmp/autoProcess.ini
            subPath: autoProcess.ini
      # config-file:
      #   type: secret
      #   name: sma-configmap-secret
      #   globalMounts:
      #     - path: /usr/local/sma/config/autoProcess.ini
      #       subPath: autoProcess.ini
      media:
        type: persistentVolumeClaim
        existingClaim: pvc-media-nfs
        globalMounts:
          - path: /movies
            subPath: Movies
          - path: /downloads
            subPath: Torrents