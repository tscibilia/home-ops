---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-sma:
            image:
              repository: ghcr.io/ghcr-library/alpine
              tag: "3.12.1@sha256:d7342993700f8cd7aba8496c2d0e57be0666e80b4c441925fc6f9361fa81d10e"
            command:
              - sh
              - -c
              - |
                set -eux
                mkdir -p /usr/local/sma
                wget -q -nc -P /usr/local/sma \
                  https://raw.githubusercontent.com/mdhiggins/radarr-sma/master/extras/postRadarr.sh \
                  https://raw.githubusercontent.com/mdhiggins/radarr-sma/master/extras/update.py \
                  https://raw.githubusercontent.com/mdhiggins/sickbeard_mp4_automator/master/postRadarr.py \
                  https://raw.githubusercontent.com/mdhiggins/sickbeard_mp4_automator/master/qBittorrentPostProcess.py
                chmod +x /usr/local/sma/postRadarr.sh
                chown 1044:100 /usr/local/sma/*
            securityContext:
              runAsNonRoot: false
              runAsUser: 0
              runAsGroup: 0
              fsGroup: 0
              capabilities: { add: ["CHOWN"] }
            lifecycle:
              postStart:
                exec:
                  command:
                    - sh
                    - -c
                    - |
                      # force the dir back to 1044:100
                      chown -R 1044:100 /usr/local/sma
                      chmod -R u+rwX,g+rwX,o-rwx /usr/local/sma
        containers:
          app:
            image:
              repository: ghcr.io/mdhiggins/radarr-sma
              tag: "develop@sha256:7c7ed0b1d5e3601daf15d48f163cb13bb38afac5c5ba2ccfd742222778b4a8f6"
            env:
              TZ: ${TIMEZONE}
              PUID: 1044
              PGID: 100
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 2Gi
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: ${GATUS_PATH}
                    port: &port 7878
                  initialDelaySeconds: 600
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
    defaultPodOptions:
      securityContext:
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: *app
      config-cache:
        existingClaim: radarr-cache
        globalMounts:
          - path: /config/MediaCover
      config-sma:
        type: emptyDir
        globalMounts:
          - path: /usr/local/sma
      config-file:
        type: secret
        name: sma-configmap-secret
        globalMounts:
          - path: /usr/local/sma/config/autoProcess.ini
            subPath: autoProcess.ini
      media:
        type: persistentVolumeClaim
        existingClaim: pvc-media-nfs
        globalMounts:
          - path: /movies
            subPath: Movies
          - path: /downloads
            subPath: Torrents
      tmp:
        type: emptyDir