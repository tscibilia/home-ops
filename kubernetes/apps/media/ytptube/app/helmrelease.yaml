---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ytptube
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  interval: 1h
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/arabcoders/ytptube
              tag: "v0.6.4@sha256:9a380e405b8f612667815c1289d2d4804d75fe971e9e14ce38e0769224df093c"
            env:
              TZ: ${TIMEZONE}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: ${GATUS_PATH}
                    port: &port 8081
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 50m
                memory: 256Mi
              limits:
                memory: 512Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1044
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        # annotations:
        #   # See instructions at https://goauthentik.io/docs/providers/proxy/forward_auth
        #   nginx.ingress.kubernetes.io/auth-url: |-
        #     http://ak-outpost-authentik-embedded-outpost.default.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
        #   nginx.ingress.kubernetes.io/auth-signin: |-
        #     https://{{ .Release.Name }}.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
        #   nginx.ingress.kubernetes.io/auth-response-headers: |-
        #     Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-entitlements
        #   nginx.ingress.kubernetes.io/auth-snippet: |
        #     proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: "${GATUS_SUBDOMAIN}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: *app
      media:
        type: nfs
        server: ${NAS_IP}
        path: /volume1/Media/library
        globalMounts:
          - path: /downloads/library
      downloads:
        type: emptyDir
        globalMounts:
          - path: /downloads
      tmp:
        type: emptyDir