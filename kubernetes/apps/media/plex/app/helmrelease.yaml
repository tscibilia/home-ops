---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  interval: 1h
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          01-migrate-plex:
            image:
              repository: docker.io/library/busybox
              tag: latest
            command:
              - sh
              - -c
              - |
                  echo "[init] Creating tmp directory..." && \
                  mkdir -p "/tmp/migrate" && \
                  echo "[init] Copy tarball to tmp directory..." && \
                  cp "/Media/library/plex/migrate/Plex.tar.gz" "/tmp/migrate/Plex.tar.gz" && \
                  echo "[init] Cleaning init Plex files..." && \
                  rm -rf "/config/Library Application Support/Plex Media Server/*" && \
                  echo "[init] Extracting Plex archive..." && \
                  tar --exclude='Cache/*' --exclude='Thumbnails/*' -xzf "/Media/library/plex/migrate/Plex.tar.gz" -C "/config/Library Application Support/Plex Media Server/" && \
                  echo "[init] Cleaning up tmp directory..." && \
                  rm -rf "/config/Library Application Support/Plex Media Server/*" && \
                  echo "[init] Setting ownership to plex:plex..." && \
                  chown -R 1044:100 "/config/Library Application Support/Plex Media Server/"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.41.9.9961@sha256:6c86319bb3275135f5da5aec71b45e48305669ecbceee0f88d335bebf0d0f218
            env:
              TZ: ${TIMEZONE}
              PLEX_ADVERTISE_URL: https://{{ .Release.Name }}.${SECRET_DOMAIN}:443,http://192.168.5.235:32400
              PLEX_NO_AUTH_NETWORKS: 192.168.1.0/24,192.168.5.0/24
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: ${GATUS_PATH}
                    port: &port 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              requests:
                cpu: 100m
              limits:
                # gpu.intel.com/i915: 1
                memory: 8Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1044
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44]
    service:
      app:
        controller: *app
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: 192.168.5.235
        ports:
          http:
            port: *port
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          # Extended timeouts for Plex streaming
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: *app
      # Cache must be commented out initial install in order to avoid permission issues in '/config/Library/Application Support/Plex Media Server'
      config-cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      media:
        type: nfs
        server: ${NAS_IP}
        path: /volume1/Media
        globalMounts:
          - path: /Media
            readOnly: true
      tmpfs:
        type: emptyDir
        advancedMounts:
          *app :
            app:
              - path: /config/Library/Application Support/Plex Media Server/Logs
                subPath: logs
              - path: /transcode
                subPath: transcode
              - path: /tmp
                subPath: tmp
