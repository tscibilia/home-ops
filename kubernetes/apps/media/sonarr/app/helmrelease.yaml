---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-sma:
            image:
              repository: ghcr.io/ghcr-library/alpine
              tag: "3.12.1@sha256:d7342993700f8cd7aba8496c2d0e57be0666e80b4c441925fc6f9361fa81d10e"
            command:
              - sh
              - -c
              - |
                set -eux
                mkdir -p /usr/local/sma
                wget -q -nc -P /usr/local/sma \
                  https://raw.githubusercontent.com/mdhiggins/sonarr-sma/master/extras/postSonarr.sh \
                  https://raw.githubusercontent.com/mdhiggins/sonarr-sma/master/extras/update.py \
                  https://raw.githubusercontent.com/mdhiggins/sickbeard_mp4_automator/master/postSonarr.py \
                  https://raw.githubusercontent.com/mdhiggins/sickbeard_mp4_automator/master/qBittorrentPostProcess.py
                chmod +x /usr/local/sma/postSonarr.sh
                chown 1044:100 /usr/local/sma/*
            securityContext:
              runAsNonRoot: false
              runAsUser: 0
              runAsGroup: 0
              fsGroup: 0
        containers:
          app:
            image:
              repository: ghcr.io/mdhiggins/sonarr-sma
              tag: "develop@sha256:0eb066516923cb7990af986cc56078adefc91d19244bae013d10739f4bbe8b4b"
            env:
              TZ: ${TIMEZONE}
              PUID: 1044
              PGID: 100
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 2Gi
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: ${GATUS_PATH}
                    port: &port 8989
                  initialDelaySeconds: 600
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
          fix-perms:
            image:
              repository: ghcr.io/ghcr-library/busybox
              tag: "1.32@sha256:c9249fdf56138f0d929e2080ae98ee9cb2946f71498fc1484288e6a935b5e5bc"
            command:
              - sh
              - -c
            args:
              - |
                echo "⏳ Waiting for Radarr to listen on 8989…"
                until nc -z localhost 8989; do
                  sleep 2
                done
                echo "✅ Fixing /usr/local/sma perms"
                chown -R 1044:100 /usr/local/sma
                chmod -R u+rwX,g+rwX /usr/local/sma
                # now just stay alive so Deployment isn't “complete”
                sleep infinity
            securityContext:
              runAsNonRoot: false
              runAsUser: 0
              runAsGroup: 0
              fsGroup: 0
    defaultPodOptions:
      securityContext:
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: *app
      config-cache:
        existingClaim: sonarr-cache
        globalMounts:
          - path: /config/MediaCover
      config-sma:
        type: emptyDir
        globalMounts:
          - path: /usr/local/sma
      config-file:
        type: secret
        name: sma-configmap-secret
        globalMounts:
          - path: /usr/local/sma/config/autoProcess.ini
            subPath: autoProcess.ini
      media:
        type: persistentVolumeClaim
        existingClaim: pvc-media-nfs
        globalMounts:
          - path: /tv
            subPath: TV Shows
          - path: /anime
            subPath: Anime
          - path: /ecchi
            subPath: Ecchi
          - path: /downloads
            subPath: Torrents
      tmp:
        type: emptyDir