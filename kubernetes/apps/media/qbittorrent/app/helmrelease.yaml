---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
# https://github.com/tholinka/home-ops/blob/main/kubernetes/apps/media/qbittorrent/app/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app qbittorrent
spec:
  chartRef:
    kind: OCIRepository
    name: *app
  interval: 1h
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: 'true'
        initContainers:
          coredns:
            image:
              repository: mirror.gcr.io/coredns/coredns
              tag: 1.13.1
            args: ["-conf", "/etc/coredns/Corefile"]
            restartPolicy: Always
          gluetun:
            dependsOn: coredns
            image:
              repository: ghcr.io/qdm12/gluetun
              tag: v3.40.0@sha256:2b42bfa046757145a5155acece417b65b4443c8033fb88661a8e9dcf7fda5a00
            env: # (https://github.com/qdm12/gluetun-wiki)
              DOT: 'off'
              DNS_ADDRESS: "127.0.0.2"
              FIREWALL_INPUT_PORTS: 8080,8388,8888,9999 # 8000: Ctrl Srvr, 8080: WebUI, 8388: Socks Proxy, 8888: Privoxy, 9999: Kube Probes
              FIREWALL_OUTBOUND_SUBNETS: 10.42.0.0/16,10.43.0.0/16 # Allow access to k8s subnets
              HEALTH_SERVER_ADDRESS: :9999
              HEALTH_SUCCESS_WAIT_DURATION: 10s
              HTTP_CONTROL_SERVER_AUTH_CONFIG_FILEPATH: &gluetunAuthPath /gluetun/auth.toml
              HTTP_CONTROL_SERVER_ADDRESS: &gluetunCtrlSrvr :8000
              HTTPPROXY: 'on'
              HTTPPROXY_LISTENING_ADDRESS: &gluetunPrivoxy :8888
              VPN_SERVICE_PROVIDER: airvpn
              VPN_TYPE: wireguard
              WIREGUARD_ADDRESSES: 10.186.30.135/32
              FIREWALL_VPN_INPUT_PORTS: &vpnPort 55636
              SERVER_NAMES: Ukdah
              SERVER_HOSTNAMES: ca.vpn.airdns.org
              VPN_INTERFACE: tun0
              UPDATER_PERIOD: 24h
            envFrom:
              - secretRef:
                  name: qbittorrent-vpn-secret
            lifecycle:
              postStart:
                exec:
                  command:
                      - /bin/sh
                      - -c
                      - (ip rule del table 51820; ip -6 rule del table 51820) || true
            restartPolicy: Always
            resources:
              requests:
                cpu: 20m
              limits:
                squat.ai/tun: "1"
                memory: 128Mi
            securityContext:
              # can't be non-root, or it has no access to tunnel
              runAsNonRoot: false
              runAsUser: 0
              runAsGroup: 0
              capabilities: { add: ["NET_ADMIN"] }
              allowPrivilegeEscalation: false
          # TODO: Replace once gluetun supports socks5, nothing supports shadowsocks
          socks5:
            restartPolicy: Always
            image:
              repository: serjs/go-socks5-proxy
              tag: latest@sha256:0af522996f402c03ecd985a87997158eabeb28935365e3a384df37eafcf740ea
            env:
              PROXY_PORT: &socks5 8388
              REQUIRE_AUTH: "false"
            resources:
              requests:
                cpu: 5m
              limits:
                memory: 32Mi
            securityContext: &secCont
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ['ALL'] }
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/qbittorrent
              tag: 5.1.2@sha256:31ac39705e31f7cdcc04dc46c1c0b0cdf8dc6f9865d4894efc097a33adc41524
            env:
              TZ: ${TIMEZONE}
              UMASK: "022"
              QBT_BitTorrent__Session__DefaultSavePath: /Media/torrents/completed
              QBT_BitTorrent__Session__TempPath: /Media/torrents/incomplete
              QBT_BitTorrent__Session__TempPathEnabled: true
              QBT_Preferences__WebUI__LocalHostAuth: false
              QBT_Preferences__WebUI__AuthSubnetWhitelistEnabled: true
              QBT_Preferences__WebUI__AuthSubnetWhitelist: |-
                10.42.0.0/16, 10.43.0.0/16, 192.168.1.0/24, 192.168.5.0/24
              QBT_Preferences__WebUI__AlternativeUIEnabled: true
              QBT_Preferences__WebUI__RootFolder: /add-ons/VueTorrent
              QBT_TORRENTING_PORT: *vpnPort
              QBT_WEBUI_PORT: &port 8080
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              requests:
                cpu: 150m
                memory: 2Gi
              limits:
                memory: 4Gi
            securityContext: *secCont
          vuetorrent:
            dependsOn: app
            image:
              repository: registry.k8s.io/git-sync/git-sync
              tag: v4.5.0@sha256:0e64aedb0d0ae0a3bab880349a5109b2a31891d646dd61e433ca36ed220dff1f
            args:
              - "--repo=https://github.com/VueTorrent/VueTorrent"
              - "--ref=latest-release"
              - "--period=86400s"
              - "--root=/add-ons"
              - "--group-write"
              - "--add-user"
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 32Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1044
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        forceRename: *app
        ports:
          http:
            primary: true
            port: *port
      gluetun:
        controller: *app
        forceRename: gluetun
        ports:
          privoxy:
            enabled: true
            port: 8888
          socks-proxy:
            enabled: true
            port: *socks5
    ingress:
      app:
        className: internal
        annotations:
          # See instructions at https://goauthentik.io/docs/providers/proxy/forward_auth
          nginx.ingress.kubernetes.io/auth-url: |-
            http://ak-outpost-authentik-embedded-outpost.default.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
            https://${GATUS_SUBDOMAIN}.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-entitlements
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
          gatus.home-operations.com/endpoint: |-
            group: internal
            guarded: true
            ui:
              hide-hostname: true
              hide-url: true
        hosts:
          - host: "${GATUS_SUBDOMAIN}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: *app
        advancedMounts:
          *app :
            app:
              - path: /config
      empty-config:
        type: emptyDir
        advancedMounts:
          *app :
            port-forward:
              - path: /config
      gluetun-auth:
        type: secret
        name: qbittorrent-gluetun-secret
        advancedMounts:
          *app :
            gluetun:
              - path: *gluetunAuthPath
                subPath: auth.toml
      coredns:
        type: configMap
        name: qbittorrent-coredns
        advancedMounts:
          *app :
            coredns:
              - path: /etc/coredns/Corefile
                subPath: Corefile
                readOnly: true
      media:
        type: nfs
        server: ${NAS_IP}
        path: /volume1/Media/torrents
        globalMounts:
          - path: /Media/torrents
      addons:
        type: emptyDir
        globalMounts:
          - path: /add-ons
      categories-file:
        type: configMap
        name: qbittorrent-config
        advancedMounts:
          *app :
            app:
              - path: /config/qBittorrent/categories.json
                subPath: categories.json
                readOnly: true