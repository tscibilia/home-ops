---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app searxng
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      *app :
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/searxng/searxng
              tag: 2025.5.17-86373e7@sha256:2f45ccc0b330faa47d8706de883c6e583b38806e32b51172d93c381ce1d92f0b
            # command: ["/usr/local/searxng/venv/bin/uwsgi", "--master", "/usr/local/searxng/.template/uwsgi.ini"]
            env:
              TZ: "${TIMEZONE}"
              SEARXNG_BASE_URL: &url https://${GATUS_SUBDOMAIN}.${SECRET_DOMAIN}
              SEARXNG_URL: *url
              SEARXNG_PORT: &port 8080
              SEARXNG_REDIS_URL: redis://dragonfly-cluster.database.svc.cluster.local:6379/3
              UWSGI_THREADS:
                valueFrom:
                  resourceFieldRef:
                    containerName: app
                    resource: limits.cpu # not defined, so will use node allocatable
              UWSGI_WORKERS: "1" # UWSGI_WORKERS: *cpu
            envFrom:
              - secretRef:
                  name: searxng-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: ${GATUS_PATH}
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                memory: 2Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop: ["ALL"]
                add: ["CHOWN", "SETGID" ,"SETUID", "DAC_OVERRIDE"]
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 977 # upstream `searxng` user
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: "Always"
        seccompProfile: { type: "RuntimeDefault" }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: "${GATUS_SUBDOMAIN}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config-files:
        type: configMap
        name: searxng-config
        globalMounts:
          - path: /etc/searxng/settings.yml
            subPath: settings.yml
            readOnly: true
          - path: /etc/searxng/limiter.toml
            subPath: limiter.toml
            readOnly: true
      tmp:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /tmp