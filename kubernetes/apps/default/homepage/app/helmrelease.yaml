---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app homepage
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      homepage:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/gethomepage/homepage
              tag: v1.3.2
            env:
              TZ: ${TIMEZONE}
              HOMEPAGE_ALLOWED_HOSTS: "*"
            envFrom:
              - secretRef:
                  name: homepage-secret
            resources:
              requests:
                cpu: 20m
                memory: 256Mi
              limits:
                memory: 512Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: ${GATUS_PATH}
                    port: &port 3000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
        serviceAccount:
          identifier: homepage
    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        hosts:
          - host: "${GATUS_SUBDOMAIN}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      logs:
        type: emptyDir
        globalMounts:
          - path: /app/config/logs
      config:
        type: configMap
        name: homepage-configmap
        globalMounts:
          - path: /app/config/bookmarks.yaml
            subPath: bookmarks.yaml
          - path: /app/config/docker.yaml
            subPath: docker.yaml
          - path: /app/config/kubernetes.yaml
            subPath: kubernetes.yaml
          - path: /app/config/services.yaml
            subPath: services.yaml
          - path: /app/config/settings.yaml
            subPath: settings.yaml
          - path: /app/config/widgets.yaml
            subPath: widgets.yaml
    serviceAccount:
      homepage: {}
    rbac:
      bindings:
        homepage:
          type: ClusterRoleBinding
          roleRef:
            kind: ClusterRole
            name: homepage
          subjects:
            - identifier: homepage
      roles:
        homepage:
          type: ClusterRole
          rules:
            - apiGroups:
                - ""
              resources:
                - namespaces
                - pods
                - nodes
              verbs:
                - get
                - list
            - apiGroups:
                - extensions
                - networking.k8s.io
              resources:
                - ingresses
              verbs:
                - get
                - list
            - apiGroups:
                - metrics.k8s.io
              resources:
                - nodes
                - pods
              verbs:
                - get
                - list
            - apiGroups:
                - apiextensions.k8s.io
              resources:
                - customresourcedefinitions/status
              verbs:
                - get
                - list