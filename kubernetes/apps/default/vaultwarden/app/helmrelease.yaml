---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app vaultwarden
spec:
  chartRef:
    kind: OCIRepository
    name: *app
  interval: 1h
  values:
    controllers:
      *app :
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          01-init-branding:
            image:
              repository: quay.io/minio/mc
              tag: RELEASE.2025-08-13T08-35-41Z@sha256:a7fe349ef4bd8521fb8497f55c6042871b2ae640607cf99d9bede5e9bdf11727
            command: ["/bin/sh", "-c"]
            args: ["mkdir -p /data/templates; mc alias set s3 https://s3.t0m.co '' '' --api S3v4; mc cp --recursive s3/t0m-public/vaultwarden/templates/ /data/templates/"]
            # args: ["mkdir -p /data/templates; aws --endpoint-url https://s3.${SECRET_DOMAIN} s3 cp --no-sign-request --recursive s3://t0m-public/vaultwarden/templates/ /data/templates/"]
        containers:
          app:
            image:
              repository: docker.io/vaultwarden/server
              tag: "1.34.3@sha256:84fd8a47f58d79a1ad824c27be0a9492750c0fa5216b35c749863093bfa3c3d7"
            env:
              TZ: "${TIMEZONE}"
              DATA_FOLDER: "data"
              SIGNUPS_ALLOWED: "false"
              INVITATIONS_ALLOWED: "true"
              INVITATION_ORG_NAME: "Bitwarden"
              ENABLE_WEBSOCKET: "true"
              PUSH_ENABLED: "true"
              DOMAIN: "https://pw.${SECRET_DOMAIN}"
              SHOW_PASSWORD_HINT: "true"
              ICON_SERVICE: "duckduckgo"
              TEMPLATES_FOLDER: "data/templates"
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secrets"
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: ${GATUS_PATH}
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 20m
                memory: 128Mi
              limits:
                memory: 512Mi
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: "${GATUS_SUBDOMAIN}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /data