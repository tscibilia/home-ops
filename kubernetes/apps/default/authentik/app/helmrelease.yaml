---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: authentik
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 2025.2.3
  url: oci://ghcr.io/goauthentik/helm-charts/authentik
---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authentik
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: authentik
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    global:
      fullnameOverride: authentik
      podAnnotations:
        secret.reloader.stakater.com/reload: authentik-secret
      deploymentStrategy:
        type: RollingUpdate
      env:
        - name: AUTHENTIK_POSTGRESQL__NAME
          value: *app
        - name: AUTHENTIK_POSTGRESQL__USER
          value: *app
        - name: AUTHENTIK_HOST
          value: "https://auth.${SECRET_DOMAIN}"
        - name: AUTHENTIK_STORAGE__MEDIA__BACKEND
          value: file
      envFrom:
        - secretRef:
            name: authentik-secret
      volumes:
        - name: custom-css
          configMap:
            name: authentik-customize
        - name: media
          persistentVolumeClaim:
            claimName: pvc-nfs-media
      volumeMounts:
        - name: custom-css
          mountPath: /web/dist/custom.css
          subPath: custom.css
          readOnly: true
        - name: media
          mountPath: /media
          subPath: Torrents/sso
    authentik:
      error_reporting:
        enabled: false
    server:
      autoscaling:
        enabled: true
        minReplicas: 1
      ingress:
        enabled: true
        ingressClassName: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: "auth.${SECRET_DOMAIN}"
            paths:
              - path: /
      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          memory: 1Gi
      metrics:
        prometheus:
          serviceMonitor:
            enabled: true
    worker:
      autoscaling:
        enabled: true
        minReplicas: 1
      resources:
        requests:
          cpu: 50m
          memory: 512Mi
        limits:
          memory: 1Gi