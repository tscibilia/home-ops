---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app spoolman
spec:
  chartRef:
    kind: OCIRepository
    name: *app
  interval: 1h
  values:
    controllers:
      *app :
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-perms:
            image:
              repository: ghcr.io/ghcr-library/busybox
              tag: latest@sha256:c9249fdf56138f0d929e2080ae98ee9cb2946f71498fc1484288e6a935b5e5bc
            command:
              - sh
              - -c
              - |
                # adjust /data (or whatever path your app uses)
                echo "[$(date +'%Y-%m-%dT%H:%M:%SZ')] init: fixing ownership on /home/app/.local/share/spoolman"
                chown -R 1000:100 /home/app/.local/share/spoolman
                echo "[$(date +'%Y-%m-%dT%H:%M:%SZ')] init: ownership set to 1000:100 on /home/app/.local/share/spoolman"
            securityContext:
              runAsNonRoot: false
              runAsUser: 0
              runAsGroup: 0
              readOnlyRootFilesystem: false
              allowPrivilegeEscalation: true
              capabilities: { add: ["CHOWN"] }
        containers:
          app:
            image:
              repository: ghcr.io/donkie/spoolman
              tag: "0.22.1@sha256:238ea5bfb2eeda4436c39f54e73df5fef4ee904fb7c291617588b856786fe0ef"
            env:
              TZ: "${TIMEZONE}"
              SPOOLMAN_PORT: &port 8000
              SPOOLMAN_METRICS_ENABLED: "true"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 25m
                memory: 256Mi
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    serviceMonitor:
      spoolman:
        serviceName: *app
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
            metricRelabelings:
              - action: labeldrop
                regex: (pod)
    ingress:
      app:
        className: internal
        # annotations:
        #   # See instructions at https://goauthentik.io/docs/providers/proxy/forward_auth
        #   nginx.ingress.kubernetes.io/auth-url: |-
        #     http://ak-outpost-authentik-embedded-outpost.default.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
        #   nginx.ingress.kubernetes.io/auth-signin: |-
        #     https://${GATUS_SUBDOMAIN}.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
        #   nginx.ingress.kubernetes.io/auth-response-headers: |-
        #     Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-entitlements
        #   nginx.ingress.kubernetes.io/auth-snippet: |
        #     proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: "${GATUS_SUBDOMAIN}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /home/app/.local/share/spoolman