---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &name authentikold-secret
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: akeyless-secret-store
  target:
    name: *name
    template:
      data:
        AUTHENTIK_SECRET_KEY: "{{ .AUTHENTIK_SECRET_KEY }}"
        AUTHENTIK_EMAIL__HOST: "{{ .SMTP_HOST }}"
        AUTHENTIK_EMAIL__PORT: "{{ .SMTP_PORT }}"
        AUTHENTIK_EMAIL__USERNAME: "{{ .SMTP_USERNAME }}"
        AUTHENTIK_EMAIL__PASSWORD: "{{ .SMTP_PASSWORD }}"
        AUTHENTIK_EMAIL__USE_TLS: "{{ .SMTP_USE_TLS }}"
        AUTHENTIK_EMAIL__USE_SSL: "{{ .SMTP_USE_SSL }}"
        AUTHENTIK_EMAIL__TIMEOUT: "{{ .SMTP_TIMEOUT }}"
        AUTHENTIK_EMAIL__FROM: "{{ .SMTP_FROM }}"
        AUTHENTIK_OUTPOST_TOKEN: "{{ .AUTHENTIK_OUTPOST_TOKEN}}"

        AUTHENTIK_STORAGE__MEDIA__BACKEND: "s3"
        AUTHENTIK_STORAGE__MEDIA__S3__ACCESS_KEY: "{{ .AUTHENTIK_AWS_ACCESS_KEY_ID }}"
        AUTHENTIK_STORAGE__MEDIA__S3__SECRET_KEY: "{{ .AUTHENTIK_AWS_SECRET_ACCESS_KEY }}"
        AUTHENTIK_STORAGE__MEDIA__S3__BUCKET_NAME: t0m-authentik
        AUTHENTIK_STORAGE__MEDIA__S3__REGION: us-east-1
        AUTHENTIK_STORAGE__MEDIA__S3__ENDPOINT: "https://s3.${SECRET_DOMAIN}"
        AUTHENTIK_STORAGE__MEDIA__S3__CUSTOM_DOMAIN: "s3.${SECRET_DOMAIN}/t0m-authentik"
  dataFrom:
    - extract:
        key: /authentik
    - extract:
        key: /minio
    - extract:
        key: /ses-creds
---
# yaml-language-server: $schema=https://github.com/datreeio/CRDs-catalog/raw/refs/heads/main/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &name authentikold-initdb-secret
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: akeyless-secret-store
  target:
    name: *name
    template:
      data:
        INIT_POSTGRES_DBNAME: authentikold
        INIT_POSTGRES_HOST: ${CNPG_NAME:=postgres16}-rw.database.svc.cluster.local
        INIT_POSTGRES_USER: authentik
        INIT_POSTGRES_PASS: "{{ .authentik_postgres_password }}"
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"
  dataFrom:
    - extract:
        key: /cnpg-users
    - extract:
        key: /cnpg-operator
---
# yaml-language-server: $schema=https://github.com/datreeio/CRDs-catalog/raw/refs/heads/main/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &name authentikold-pguser-secret
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: akeyless-secret-store
  target:
    name: *name
    template:
      data:
        port: "5432"
        host: ${CNPG_NAME:=postgres16}-rw.database.svc.cluster.local
        ro_host: ${CNPG_NAME:=postgres16}-ro.database.svc.cluster.local
        user: authentik
        password: "{{ .authentik_postgres_password }}"
        db: "authentikold"
        uri: postgresql://authentik:{{ .authentik_postgres_password }}@${CNPG_NAME:=postgres16}-rw.database.svc.cluster.local:5432/authentikold
        dsn: "host=${CNPG_NAME:=postgres16}-rw.database.svc.cluster.local port=5432 user=authentik password={{ .authentik_postgres_password }} dbname=authentikold sslmode=disable"
  dataFrom:
    - extract:
        key: /cnpg-users