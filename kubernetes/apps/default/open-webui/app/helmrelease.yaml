---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app open-webui
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  interval: 1h
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      *app :
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/open-webui/open-webui
              tag: 0.6.22@sha256:fb739f0e9cb0b51d66f0c43bab8bab00960dac38804a243aca1323a563add9cd
            env:
              TZ: "${TIMEZONE}"
              OLLAMA_BASE_URLS: http://p1g6.local:11434;http://ts-p1g6-xnm8p.network.svc.cluster.local:11434
              ENABLE_RAG_WEB_SEARCH: true
              RAG_WEB_SEARCH_ENGINE: "searxng"
              SEARXNG_QUERY_URL: "http://searxng.default.svc.cluster.local:8080/search?q=<query>"
              USE_CUDA: false
              USE_OLLAMA: false
              ENABLE_SIGNUP: false
              ENABLE_LOGIN_FORM: false
              ENABLE_OAUTH_SIGNUP: true
              OAUTH_MERGE_ACCOUNTS_BY_EMAIL: true
              OAUTH_PROVIDER_NAME: Authentik
              OPENID_REDIRECT_URI: https://${GATUS_SUBDOMAIN}.${SECRET_DOMAIN}/oauth/oidc/callback
              OPENID_PROVIDER_URL: https://auth.${SECRET_DOMAIN}/application/o/openai/.well-known/openid-configuration
              OAUTH_SCOPES: openid email profile
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secrets"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: ${GATUS_PATH}
                    port: &port 8080
                  initialDelaySeconds: 120
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 500m
                memory: 1Gi
              limits:
                memory: 2Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ALL] }
    defaultPodOptions:
      hostAliases:
        - ip: "192.168.1.196"
          hostnames:
            - "p1g6.local"
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: "${GATUS_SUBDOMAIN}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: ${APP}
        globalMounts:
          - path: /app/backend/data
      tmp:
        type: emptyDir