---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app fluent-bit
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  interval: 1h
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      *app :
        type: daemonset
        serviceAccount:
          name: *app
        containers:
          main:
            image:
              repository: cr.fluentbit.io/fluent/fluent-bit
              tag: "4.0.9@sha256:0a207f7ae2341fdacf479c8300c4868ffecbc1eb382371fa75292f182c5ba920"
            args: ["--config=/config/fluent-bit.yaml"]
            env:
              TZ: "${TIMEZONE}"
              KUBE_NODE_IP:
                valueFrom:
                  fieldRef:
                    fieldPath: status.hostIP
            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                cpu: 1
                memory: 128Mi
            #probes: # TODO: HTTP healthchecks via health API
            #  liveness:
            #    enabled: true
            #  readiness:
            #    enabled: true
            #  #startup:
            #  #  enabled: true
    service:
     fluent-bit:
       controller: *app
       ports:
         http:
           port: 8080
           protocol: HTTP
           appProtocol: http
    persistence:
      config:
        type: configMap
        name: "{{ .Release.Name }}-config"
      logs-containers: # normal Talos disk mount
        type: hostPath
        hostPath: &path "/var/log/containers"
        globalMounts:
          - path: *path
      logs-pods: # jank tmpfs bind mount from /run on Talos
        type: hostPath
        hostPath: &path "/var/log/pods"
        globalMounts:
          - path: *path
    defaultPodOptions:
      automountServiceAccountToken: true
      enableServiceLinks: true
      securityContext:
        runAsUser: &uid 0 # logs are stored as root
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: Always
        seccompProfile: { type: "RuntimeDefault" }
