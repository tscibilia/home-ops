---
# yaml-language-server: $schema=https://github.com/datreeio/CRDs-catalog/raw/refs/heads/main/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: immich17
spec:
  instances: 3
  imageName: ghcr.io/tensorchord/cloudnative-vectorchord:17.5-0.4.2
  primaryUpdateStrategy: unsupervised
  primaryUpdateMethod: switchover
  # bootstrap:
  #   initdb:
  #     postInitSQL:
  #       - CREATE EXTENSION IF NOT EXISTS vchord CASCADE;
  #     import:
  #       databases: ["*"]
  #       roles: ["*"]
  #       source:
  #         externalCluster: &previousCluster immich-v1
  #       type: monolith
  superuserSecret:
    name: cnpg-secret
  enableSuperuserAccess: true
  monitoring:
    enablePodMonitor: true
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  postgresql:
    shared_preload_libraries: ["vchord.so"]
    pg_hba: ["host all all 10.42.0.0/16 scram-sha-256"]
    parameters:
      max_connections: "300"
      shared_buffers: 256MB
      autovacuum_vacuum_scale_factor: "0.1"
      autovacuum_analyze_scale_factor: "0.05"
      autovacuum_vacuum_cost_limit: "1000"
      effective_io_concurrency: "200"
      random_page_cost: "1.2"
      work_mem: 16MB
  resources:
    requests:
      cpu: 200m
      memory: 1Gi
    limits:
      memory: 2Gi
  storage:
    size: 20Gi
    storageClass: openebs-hostpath
  # https://github.com/cloudnative-pg/cloudnative-pg/issues/7715#issuecomment-2935582020
  env:
    - name: AWS_REQUEST_CHECKSUM_CALCULATION
      value: when_required
    - name: AWS_RESPONSE_CHECKSUM_VALIDATION
      value: when_required
    - name: TZ
      value: America/New_York

  backup:
    retentionPolicy: 7d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 4
      destinationPath: s3://${AWS_CNPG_BUCKET}
      endpointURL: https://${AWS_ENDPOINT}
      # Note: serverName version needs to be incremented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster immich17-v2
      s3Credentials:
        accessKeyId:
          name: cnpg-secret
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: cnpg-secret
          key: AWS_SECRET_ACCESS_KEY

  # Note: previousCluster needs to be set to the name of the previous
  # cluster when recovering from an existing cnpg cluster
  bootstrap:
    recovery:
      source: &previousCluster immich17-v1
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: *previousCluster
      barmanObjectStore:
        <<: *barmanObjectStore
        serverName: *previousCluster
  #   - name: *previousCluster
  #     connectionParameters:
  #       host: immich.database.svc.cluster.local
  #       user: postgres
  #       dbname: postgres
  #       sslmode: require
  #     password:
  #       name: cnpg-secret
  #       key: password