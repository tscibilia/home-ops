---
# yaml-language-server: $schema=https://github.com/datreeio/CRDs-catalog/raw/refs/heads/main/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres16
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:16
  primaryUpdateStrategy: unsupervised
  primaryUpdateMethod: switchover
  storage:
    size: 20Gi
    storageClass: openebs-hostpath
  superuserSecret:
    name: "{{ .Release.Name }}-secret"
  enableSuperuserAccess: true
  postgresql:
    parameters:
      max_connections: '400'
      shared_buffers: '512MB'
    pg_hba:
    - host all all 10.42.0.0/16 scram-sha-256
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      memory: 2Gi
  monitoring:
    enablePodMonitor: true
  # https://github.com/cloudnative-pg/cloudnative-pg/issues/7715#issuecomment-2935582020
  env:
    - name: AWS_REQUEST_CHECKSUM_CALCULATION
      value: when_required
    - name: AWS_RESPONSE_CHECKSUM_VALIDATION
      value: when_required
    - name: TZ
      value: ${TIMEZONE}

  backup:
    retentionPolicy: 7d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://${AWS_CNPG_BUCKET}
      endpointURL: https://${AWS_ENDPOINT}
      # Note: serverName version needs to be incremented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster postgres16-v5
      s3Credentials:
        accessKeyId:
          name: "{{ .Release.Name }}-secret"
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: "{{ .Release.Name }}-secret"
          key: AWS_SECRET_ACCESS_KEY

  # Note: previousCluster needs to be set to the name of the previous
  # cluster when recovering from an existing cnpg cluster
  bootstrap:
    recovery:
      source: &previousCluster postgres16-v4
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: *previousCluster
      barmanObjectStore:
        <<: *barmanObjectStore
        serverName: *previousCluster