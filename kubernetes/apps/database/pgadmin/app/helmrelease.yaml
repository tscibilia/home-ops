---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app pgadmin
spec:
  chartRef:
    kind: OCIRepository
    name: *app
  interval: 1h
  values:
    controllers:
      pgadmin:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 5050
            runAsGroup: 5050
            fsGroup: 5050
            fsGroupChangePolicy: OnRootMismatch
        # initContainers:
        #   remove-old-db:
        #     image:
        #       repository: docker.io/library/busybox
        #       tag: latest
        #     command: ["sh","-c","rm -f /var/lib/pgadmin/pgadmin4.db"]
        containers:
          app:
            image:
              repository: docker.io/dpage/pgadmin4
              tag: "9.9@sha256:5d9624a93634d1c5e595619cc57b1d330758120d1baf445fa97300c0c1fc3c0a"
            env:
              PGADMIN_DEFAULT_EMAIL:
                valueFrom:
                  secretKeyRef:
                    name: "{{ .Release.Name }}-secret"
                    key: PGADMIN_DEFAULT_EMAIL
              PGADMIN_DEFAULT_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: "{{ .Release.Name }}-secret"
                    key: PGADMIN_DEFAULT_PASSWORD
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: ${GATUS_PATH}
                    port: &port 80
                  initialDelaySeconds: 240
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 15m
                memory: 128Mi
              limits:
                memory: 256Mi
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          gatus.home-operations.com/endpoint: |-
            group: internal
            guarded: true
            ui:
              hide-hostname: true
              hide-url: true
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /var/lib/pgadmin
      server-json:
        type: configMap
        name: servers-json
        globalMounts:
          - path: /pgadmin4/servers.json
            subPath: servers.json